services:
  # WireGuard Manager Application
  wireguard-manager:
    build: .
    container_name: wireguard-manager
    networks:
      wgnet:
        ipv4_address: 172.20.0.2
    ports:
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./deployments:/app/deployments
    environment:
      - INIT_USERNAME=admin
      - INIT_PASSWORD=your-password
      - INIT_HOST=your-vpn-server-ip
      - WEBSERVER_HOST=your-web-server-ip
    restart: unless-stopped

  # Nginx Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    networks:
      - wgnet
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - wireguard-manager
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

networks:
  wgnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24