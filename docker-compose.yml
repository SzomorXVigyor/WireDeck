services:
  wireguard-manager:
    build: ./apps/wireguard-manager
    container_name: wireguard-manager
    networks:
      wgnet:
        ipv4_address: 172.20.0.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./nginx/sites:/app/nginx/sites
      - ./database:/app/database
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    environment:
      - ROOT_DOMAIN=${ROOT_DOMAIN}
      - INIT_USERNAME=${INIT_USERNAME}
      - INIT_PASSWORD=${INIT_PASSWORD}
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped
    depends_on:
      - nginx-proxy

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    networks:
      wgnet:
        ipv4_address: 172.20.0.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites
      - ./nginx/html/errors:/usr/share/nginx/html/errors:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    environment:
      - ROOT_DOMAIN=${ROOT_DOMAIN}
      - CONTACT_EMAIL=${CERTBOT_EMAIL}
    command: |
      /bin/sh -c "
      # Process nginx.conf
      envsubst '\$ROOT_DOMAIN' < /etc/nginx/nginx.conf > /tmp/nginx.conf && \
      # Process error HTML pages
      mkdir -p /tmp/html/errors && \
      for f in /usr/share/nginx/html/errors/*.html; do \
          envsubst '\$CONTACT_EMAIL \$ROOT_DOMAIN' < \$f > /tmp/html/errors/\$(basename \$f); \
      done && \
      # Copy processed HTML to serve folder
      cp -r /tmp/html/errors/* /usr/share/nginx/html/errors/ && \
      # Start Nginx
      nginx -g 'daemon off;' -c /tmp/nginx.conf
      "
    restart: unless-stopped

networks:
  wgnet:
    external: true
    name: wgnet
